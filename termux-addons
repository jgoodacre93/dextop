#!/bin/bash

# dependencies /////////////////////////////////////////////////////////////////

if [[ -z $(command -v frobulator) ]]
then
	if [[ $(id -u -n) = "root" ]]
	then
		SUDO_HOME=/root

		USER="${SUDO_USER}"

		HOME=/home/"${USER}"
	fi

	if [[ -z $(command -v curl) ]]
	then
		yes | apt-get install curl
	fi

	if [ ! -d "${HOME}"/.local/bin ]
	then
		mkdir -p "${HOME}"/.local/bin
	fi

	curl -s -L get.frbltr.app > "${HOME}"/.local/bin/frobulator

	chmod +x "${HOME}"/.local/bin/frobulator
fi

. "${HOME}"/.local/bin/frobulator

# script ///////////////////////////////////////////////////////////////////////

script=$(basename -- "${BASH_SOURCE[0]}")

# version //////////////////////////////////////////////////////////////////////

version="05-25-2024"

# usage ////////////////////////////////////////////////////////////////////////

# prompt ///////////////////////////////////////////////////////////////////////

frobulator.script "Setting up ${script#*-}"

# variables ////////////////////////////////////////////////////////////////////

# defaults /////////////////////////////////////////////////////////////////////

# functions ////////////////////////////////////////////////////////////////////

clean () {

	rm					\
		--recursive		\
		--force			 "${PREFIX}"/tmp/*.apk
}

trap 'clean' EXIT

open_intent () {

	unset open_command

	open_command+="am broadcast"
	open_command+=" --user 0"
	open_command+=" -a android.intent.action.VIEW"
	open_command+=" -n com.termux/com.termux.app.TermuxOpenReceiver"
	open_command+=" -d ${@}"

	frobulator.silence "${open_command}"
}

# notice

frobulator.inf "This utility sets up Termux project addons:"
frobulator.nul "These addons are fetched directly from their respective GitHub project release pages."
echo

frobulator.wrn "Enable 'Install unknown apps' permission for Termux and all other companion applications:"
frobulator.nul "Settings > Security and Privacy > Install unknown apps > Termux[:Application]"
echo

frobulator.ins "Select 'Package Installer' when prompted to proceed."
echo

frobulator.separate

frobulator.ask "Install Termux addons?"

frobulator.read reply

if [[ "${reply}" = [yY]         ]] || \
   [[ "${reply}" = [yY][eE][sS] ]]
then
	packages_list+=(
		termux-api.apk
		termux-gui.apk
	#	termux-x11-shell-loader.apk
		termux-x11.apk
		termux-styling.apk
		termux-tasker.apk
	)

	frobulator.inf "Setting up all Termux additional packages."
	echo
	
	frobulator.fwd "Installing..."
	echo

else
	frobulator.wrn "Running a session using X11 options requires Termux:X11 to be installed."
	echo

	frobulator.inf "Install the companion application by restarting this utility"
	frobulator.nul "or by fetching the package manually."
	echo
fi

for package in ${packages_list[@]}
do
	frobulator.download get.trmnl.me "${PREFIX}"/tmp "${package}"

	open_intent "${PREFIX}"/tmp/"${package}"

	frobulator.countdown 10 "Installing" "[ ${package} ]"
done

packages_list=()

frobulator.countdown 5 "Continuing" "[ ${script} ]"
